# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

pool: 
  name: myPool
  demands:
  - maven
  - Agent.Version -gtVersion 2.199

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '4ed1cacf-b605-4362-a510-d5d620b1898b'
  imageRepository: 'mehediiutazurecloud'
  containerRegistry: 'meheditestcr.azurecr.io'
  dockerfilePath: 'petstore/petstoreproductservice/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: '$(crImagePullSecretGlobal)'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build App
    pool: myPool
    steps:
    - script: echo -n -e "{\"version\":\"$(Build.BuildNumber) - $(tag)\"}" > petstore/petstoreproductservice/src/main/resources/version.json
    - task: Maven@4
      inputs:
        mavenPomFile: 'petstore/petstoreproductservice/pom.xml'
        publishJUnitResults: true
        testResultsFiles: 'petstore/petstoreproductservice/target/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy Stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy App
    pool: myPool
    environment: 'mehediiutazurecloud-7517.ingress-petstoreservices'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: mehediazurepetstore-akscluster-ingress-petstoreservices
              manifests: |
                $(Pipeline.Workspace)/manifests/petstoreproductservice-deployment-everything-enabled.yml
                $(Pipeline.Workspace)/manifests/petstoreproductservice-service-everything-enabled.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
